datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

// =============================================================================
// CMS MODELS - Sections, Pages, Services
// =============================================================================

model Section {
  id              String   @id @default(uuid())
  page_slug       String   @db.VarChar(100)
  type            String   @db.VarChar(50)
  title           String?  @db.VarChar(255)
  subtitle        String?  @db.VarChar(500)
  content         String?  @db.Text
  button_text     String?  @db.VarChar(100)
  button_link     String?  @db.VarChar(255)
  image_url       String?  @db.VarChar(500)
  data            Json?
  active          Boolean  @default(true)
  sort_order      Int      @default(0)
  seo_title       String?  @db.VarChar(255)
  seo_description String?  @db.VarChar(500)
  seo_keywords    String?  @db.VarChar(500)
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  @@map("sections")
  @@index([page_slug, active])
  @@index([sort_order])
}

model Page {
  id               String   @id @default(uuid())
  slug             String   @unique @db.VarChar(100)
  title            String   @db.VarChar(255)
  content          String   @db.Text
  meta_title       String?  @db.VarChar(255)
  meta_description String?  @db.VarChar(500)
  meta_keywords    String?  @db.VarChar(500)
  og_image         String?  @db.VarChar(500)
  active           Boolean  @default(true)
  show_in_menu     Boolean  @default(false)
  menu_order       Int?
  template         String   @default("default") @db.VarChar(50)
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  @@map("pages")
  @@index([slug])
  @@index([active])
}

model Service {
  id              String   @id @default(uuid())
  title           String   @db.VarChar(255)
  description     String   @db.Text
  icon            String   @db.VarChar(100)
  color           String?  @db.VarChar(50)
  image_url       String?  @db.VarChar(500)
  content         String?  @db.Text
  active          Boolean  @default(true)
  featured        Boolean  @default(false)
  sort_order      Int      @default(0)
  seo_title       String?  @db.VarChar(255)
  seo_description String?  @db.VarChar(500)
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  @@map("services")
  @@index([active])
  @@index([featured])
  @@index([sort_order])
}

// =============================================================================
// CORE BUSINESS MODELS - Properties, Users, Documents
// =============================================================================

// USER MODEL (Authentication)
model User {
  id         String   @id @default(uuid())
  email      String   @unique @db.VarChar(255)
  password   String   @db.VarChar(255)
  name       String?  @db.VarChar(255)
  role       String   @default("user") @db.VarChar(50)
  active     Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("users")
  @@index([email])
}

// PROPERTY MODEL (Core business entity)
model Property {
  id               String   @id @default(uuid())
  property_code    String   @unique @db.VarChar(50)
  transaction_type String   @db.VarChar(20)
  property_type    String   @db.VarChar(50)
  title            String   @db.VarChar(500)
  description      String?  @db.Text
  price            Decimal  @db.Decimal(12, 2)
  area             Decimal? @db.Decimal(10, 2)
  city_region      String?  @db.VarChar(100)
  district         String?  @db.VarChar(100)
  address          String?  @db.VarChar(500)
  floor            Int?
  total_floors     Int?
  rooms            Int?
  bathrooms        Int?
  parking          Boolean  @default(false)
  furnished        Boolean  @default(false)
  heating          String?  @db.VarChar(100)
  construction_year Int?
  features         Json?
  coordinates      Json?
  active           Boolean  @default(true)
  featured         Boolean  @default(false)
  views            Int      @default(0)
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  images    PropertyImage[]
  documents Document[]

  @@map("properties")
  @@index([transaction_type, property_type, active])
  @@index([city_region, district])
  @@index([price, area])
  @@index([featured, active])
  @@index([property_code])
}

// PROPERTY IMAGE MODEL
model PropertyImage {
  id            String   @id @default(uuid())
  property_id   String
  image_url     String   @db.VarChar(500)
  image_path    String   @db.VarChar(500)
  thumbnail_url String?  @db.VarChar(500)
  is_main       Boolean  @default(false)
  sort_order    Int      @default(0)
  created_at    DateTime @default(now())

  property Property @relation(fields: [property_id], references: [id], onDelete: Cascade)

  @@map("property_images")
  @@index([property_id])
  @@index([is_main])
}

// DOCUMENT MODEL
model Document {
  id          String   @id @default(uuid())
  property_id String
  title       String   @db.VarChar(255)
  file_url    String   @db.VarChar(500)
  file_path   String   @db.VarChar(500)
  file_type   String   @db.VarChar(50)
  file_size   Int
  created_at  DateTime @default(now())

  property Property @relation(fields: [property_id], references: [id], onDelete: Cascade)

  @@map("documents")
  @@index([property_id])
}
