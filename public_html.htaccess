# =============================================================================
# ConsultingG Real Estate - Production .htaccess Configuration
# Domain: goro.consultingg.com
# Purpose: API proxy, static file serving, SPA routing
# =============================================================================

RewriteEngine On
RewriteBase /

# -----------------------------------------------------------------------------
# SECURITY: Block access to sensitive files
# -----------------------------------------------------------------------------
<FilesMatch "\.(env|git|htaccess|htpasswd|log|ini|json|lock)$">
  Require all denied
</FilesMatch>

<Files "composer.*">
  Require all denied
</Files>

<Files "package*.json">
  Require all denied
</Files>

<Files "tsconfig.json">
  Require all denied
</Files>

# -----------------------------------------------------------------------------
# API PROXY: Forward /api/* requests to Node.js backend (port 3000)
# -----------------------------------------------------------------------------
# CRITICAL: This proxies API calls to the Node.js backend running on port 3000

<IfModule mod_proxy.c>
  ProxyPreserveHost On
  ProxyTimeout 300

  # Proxy API requests
  ProxyPass /api http://localhost:3000/api
  ProxyPassReverse /api http://localhost:3000/api

  # Health check endpoint
  ProxyPass /health http://localhost:3000/health
  ProxyPassReverse /health http://localhost:3000/health
</IfModule>

# Fallback if mod_proxy is not available - use mod_rewrite
<IfModule !mod_proxy.c>
  # Proxy API requests via rewrite
  RewriteCond %{REQUEST_URI} ^/api/
  RewriteRule ^api/(.*)$ http://localhost:3000/api/$1 [P,L]

  RewriteCond %{REQUEST_URI} ^/health$
  RewriteRule ^health$ http://localhost:3000/health [P,L]
</IfModule>

# -----------------------------------------------------------------------------
# STATIC FILE SERVING: Serve real files and directories first
# -----------------------------------------------------------------------------
RewriteCond %{REQUEST_FILENAME} -f [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^ - [L]

# -----------------------------------------------------------------------------
# UPLOADS: Serve uploaded images and files
# -----------------------------------------------------------------------------
# Images are served directly from /uploads/ directory
# No proxy needed - Apache serves these files directly

# -----------------------------------------------------------------------------
# SPA ROUTING: Single Page Application fallback
# -----------------------------------------------------------------------------
# All non-file, non-directory requests go to index.html
RewriteRule ^ index.html [L]

# -----------------------------------------------------------------------------
# MIME TYPES: Ensure correct content types
# -----------------------------------------------------------------------------
AddType text/javascript .js .mjs
AddType text/css .css
AddType application/wasm .wasm
AddType image/svg+xml .svg
AddType image/webp .webp
AddType font/woff2 .woff2
AddType font/woff .woff
AddType application/json .json

# -----------------------------------------------------------------------------
# CACHING: Set cache headers for static assets
# -----------------------------------------------------------------------------
<IfModule mod_headers.c>
  # HTML files - no cache (always fresh)
  <FilesMatch "\.(html|htm)$">
    Header set Cache-Control "no-store, no-cache, must-revalidate, max-age=0"
    Header set Pragma "no-cache"
    Header set Expires "0"
  </FilesMatch>

  # Static assets - long cache (1 year)
  <FilesMatch "\.(js|mjs|css|png|jpg|jpeg|gif|webp|svg|ico|woff|woff2|ttf|eot)$">
    Header set Cache-Control "public, max-age=31536000, immutable"
  </FilesMatch>

  # CORS headers for uploads
  <FilesMatch "\.(jpg|jpeg|png|gif|webp|svg)$">
    Header set Access-Control-Allow-Origin "*"
    Header set Access-Control-Allow-Methods "GET, OPTIONS"
  </FilesMatch>

  # Security headers
  Header set X-Frame-Options "SAMEORIGIN"
  Header set X-Content-Type-Options "nosniff"
  Header set X-XSS-Protection "1; mode=block"
  Header set Referrer-Policy "strict-origin-when-cross-origin"
</IfModule>

# -----------------------------------------------------------------------------
# COMPRESSION: Enable gzip compression
# -----------------------------------------------------------------------------
<IfModule mod_deflate.c>
  AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css
  AddOutputFilterByType DEFLATE text/javascript application/javascript application/json
  AddOutputFilterByType DEFLATE application/xml application/xhtml+xml
  AddOutputFilterByType DEFLATE application/rss+xml
  AddOutputFilterByType DEFLATE font/truetype font/opentype
  AddOutputFilterByType DEFLATE application/vnd.ms-fontobject
  AddOutputFilterByType DEFLATE image/svg+xml
</IfModule>

# -----------------------------------------------------------------------------
# PERFORMANCE: Enable KeepAlive
# -----------------------------------------------------------------------------
<IfModule mod_headers.c>
  Header set Connection keep-alive
</IfModule>

# -----------------------------------------------------------------------------
# ERROR PAGES (optional)
# -----------------------------------------------------------------------------
# ErrorDocument 404 /index.html
# ErrorDocument 500 /index.html

# =============================================================================
# DEPLOYMENT NOTES
# =============================================================================
# 1. Copy this file to /home/yogahonc/goro.consultingg.com/public_html/.htaccess
# 2. Ensure mod_rewrite is enabled in Apache
# 3. Ensure mod_proxy is enabled for API proxying
# 4. Verify Node.js backend is running on port 3000
# 5. Test: curl https://goro.consultingg.com/api/health
# 6. Test: curl https://goro.consultingg.com/uploads/properties/test.jpg
# =============================================================================
